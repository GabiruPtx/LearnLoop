# Generated by Django 5.2 on 2025-05-29 04:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UsuarioPersonalizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('matricula', models.CharField(blank=True, help_text='Matrícula única do usuário.', max_length=50, null=True, unique=True)),
                ('nome_completo', models.CharField(blank=True, help_text='Nome completo do usuário.', max_length=255)),
                ('tipo_usuario', models.CharField(choices=[('aluno', 'Aluno'), ('professor', 'Professor')], default='aluno', help_text='Define se o usuário é um aluno ou um professor.', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário Personalizado',
                'verbose_name_plural': 'Usuários Personalizados',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('data_inicio', models.DateField(blank=True, null=True)),
                ('data_fim', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Sprint',
                'verbose_name_plural': 'Sprints',
                'ordering': ['data_inicio', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='PerfilAluno',
            fields=[
                ('usuario', models.OneToOneField(limit_choices_to={'tipo_usuario': 'aluno'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_aluno', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('curso', models.CharField(blank=True, help_text='Curso em que o aluno está matriculado.', max_length=100, null=True)),
                ('semestre', models.PositiveIntegerField(blank=True, help_text='Semestre atual do aluno.', null=True)),
            ],
            options={
                'verbose_name': 'Perfil de Aluno',
                'verbose_name_plural': 'Perfis de Alunos',
            },
        ),
        migrations.CreateModel(
            name='PerfilProfessor',
            fields=[
                ('usuario', models.OneToOneField(limit_choices_to={'tipo_usuario': 'professor'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_professor', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('departamento', models.CharField(blank=True, help_text='Departamento ao qual o professor pertence.', max_length=100, null=True)),
                ('titulacao', models.CharField(blank=True, help_text='Titulação acadêmica do professor (ex: Dr., Ms.).', max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Perfil de Professor',
                'verbose_name_plural': 'Perfis de Professores',
            },
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('descricao', models.TextField(blank=True)),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_inicio', models.DateTimeField(blank=True, null=True)),
                ('data_limite', models.DateTimeField(blank=True, null=True)),
                ('data_ultima_atualizacao', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('PLANEJAMENTO', 'Em Planejamento'), ('EM_ANDAMENTO', 'Em Andamento'), ('SUSPENSO', 'Suspenso'), ('CONCLUIDO', 'Concluído'), ('CANCELADO', 'Cancelado')], default='PLANEJAMENTO', max_length=20)),
                ('tipo_projeto', models.CharField(choices=[('TRABALHO_CONCLUSAO', 'Trabalho de Conclusão'), ('PROJETO_DISCIPLINA', 'Projeto de Disciplina'), ('INICIACAO_CIENTIFICA', 'Iniciação Científica'), ('EXTENSAO', 'Extensão'), ('PESQUISA', 'Pesquisa')], default='PROJETO_DISCIPLINA', max_length=30)),
                ('publico', models.BooleanField(default=True)),
                ('ativo', models.BooleanField(default=True)),
                ('versao', models.PositiveIntegerField(default=1)),
                ('observacoes', models.TextField(blank=True)),
                ('participantes', models.ManyToManyField(related_name='projetos_participante', to=settings.AUTH_USER_MODEL)),
                ('responsavel', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projetos_responsavel', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('data_limite', models.DateField()),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='public.projeto')),
            ],
            options={
                'verbose_name': 'Milestone',
                'verbose_name_plural': 'Milestones',
                'ordering': ['data_limite', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Tarefa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('EM_ANDAMENTO', 'Em Andamento'), ('CONCLUIDA', 'Concluída'), ('CANCELADA', 'Cancelada')], default='PENDENTE', max_length=20)),
                ('dificuldade', models.CharField(blank=True, choices=[('FACIL', 'Fácil'), ('MEDIO', 'Médio'), ('DIFICIL', 'Difícil')], max_length=20, null=True)),
                ('prioridade', models.CharField(blank=True, choices=[('BAIXA', 'Baixa'), ('MEDIA', 'Média'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], max_length=20, null=True)),
                ('tamanho', models.CharField(blank=True, choices=[('PEQUENO', 'Pequeno'), ('MEDIO', 'Médio'), ('GRANDE', 'Grande')], max_length=20, null=True)),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('especificacoes', models.TextField(blank=True, null=True)),
                ('visibilidade', models.CharField(choices=[('PUBLICA', 'Pública'), ('ESPECIFICA', 'Específica (visível apenas para envolvidos)')], default='PUBLICA', max_length=20)),
                ('nota', models.FloatField(blank=True, null=True)),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('milestone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tarefas', to='public.milestone')),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarefas', to='public.projeto')),
                ('relacionamentos', models.ManyToManyField(blank=True, to='public.tarefa')),
                ('responsaveis', models.ManyToManyField(blank=True, limit_choices_to={'tipo_usuario': 'aluno'}, related_name='tarefas_responsaveis', to=settings.AUTH_USER_MODEL)),
                ('sprint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tarefas', to='public.sprint')),
            ],
            options={
                'verbose_name': 'Tarefa',
                'verbose_name_plural': 'Tarefas',
                'ordering': ['status', '-data_criacao', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conteudo', models.TextField()),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now)),
                ('visibilidade', models.CharField(choices=[('PUBLICA', 'Pública'), ('ESPECIFICA', 'Específica (visível apenas para envolvidos)')], default='PUBLICA', max_length=20)),
                ('autor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comentarios_feitos', to=settings.AUTH_USER_MODEL)),
                ('tarefa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='public.tarefa')),
            ],
            options={
                'verbose_name': 'Comentário',
                'verbose_name_plural': 'Comentários',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags_do_projeto', to='public.projeto')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['nome'],
                'unique_together': {('nome', 'projeto')},
            },
        ),
    ]
